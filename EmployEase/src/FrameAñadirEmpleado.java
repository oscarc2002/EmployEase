
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Month;
import javax.swing.JOptionPane;

public class FrameAñadirEmpleado extends javax.swing.JFrame {

    SQLConnection connection = new SQLConnection();
    
    public FrameAñadirEmpleado() {
        initComponents();
        loadData();
        
        this.add(new EditarEmpleado());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jTextField35 = new javax.swing.JTextField();
        btnGroupSexos = new javax.swing.ButtonGroup();
        btnGroupEstatus = new javax.swing.ButtonGroup();
        btnGroupTipo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCurrentDate = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanelEmpleado = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itemRegresar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jLabel9.setText("Nombre(s):");

        jTextField5.setText("jTextField1");

        jLabel10.setText("Apellido(s):");

        jTextField6.setText("jTextField1");

        jLabel14.setText("jLabel5");

        jTextField10.setText("jTextField1");

        jTextField14.setText("jTextField1");

        jLabel18.setText("jLabel5");

        jLabel20.setText("jLabel20");

        label1.setText("label1");

        jTextField35.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 26)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ingreso de Nuevo Empleado");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("N° de empleado:");

        lblCurrentDate.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblCurrentDate.setText("0");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setText("Información personal");

        jLabel30.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel30.setText("Fecha de registro:");

        lblID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblID.setText("0");

        btnAdd.setText("Agregar registro");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel3.setText("Campos con * son obligatorios");

        javax.swing.GroupLayout jPanelEmpleadoLayout = new javax.swing.GroupLayout(jPanelEmpleado);
        jPanelEmpleado.setLayout(jPanelEmpleadoLayout);
        jPanelEmpleadoLayout.setHorizontalGroup(
            jPanelEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanelEmpleadoLayout.setVerticalGroup(
            jPanelEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu1.setText("Archivo");

        itemRegresar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_LEFT, java.awt.event.InputEvent.ALT_DOWN_MASK));
        itemRegresar.setText("Regresar");
        itemRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemRegresarActionPerformed(evt);
            }
        });
        jMenu1.add(itemRegresar);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(686, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                            .addComponent(jLabel3))
                        .addGap(434, 434, 434))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jPanelEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblCurrentDate)
                    .addComponent(jLabel30)
                    .addComponent(lblID)
                    .addComponent(btnAdd))
                .addGap(45, 45, 45)
                .addComponent(jPanelEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(337, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean verifyFields()
    {
        String nombre = txtName.getText();
        String apellido = txtLastNime.getText();
        String unidad = txtUnit.getText();
        String puesto = txtPosition.getText();
        String departamento = txtDepartment.getText();
        
        if(nombre.trim().equals("") || apellido.trim().equals("") || unidad.trim().equals("") || puesto.trim().equals("")
                || departamento.trim().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Faltan datos por llenar","Error",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        else
        {
            return true;
        }
    }
    
    private void itemRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemRegresarActionPerformed
        FrameInfoEmpleado info = new FrameInfoEmpleado();
        info.show();
        this.dispose();
    }//GEN-LAST:event_itemRegresarActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        addRegister();
    }//GEN-LAST:event_btnAddActionPerformed

    private void addRegister(){
        PreparedStatement st;
        ResultSet rs;
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String fNacimiento = sdf.format(calBirthday.getDate());
        String fInicio = sdf.format(caldStart.getDate());
        String fFin = sdf.format(caldFinish.getDate());
        String fAltaIMSS = sdf.format(calRegisterIMSS.getDate());
        
        String fActual = lblCurrentDate.getText();
        String nombre = txtName.getText();
        String apellido = txtLastNime.getText();
        String unidad = txtUnit.getText();
        String telefono = txtPhone.getText();
        String email = txtEmail.getText();
        String nss = txtNSS.getText();
        String curp = txtCurp.getText();
        String rfc = txtRFC.getText();
        String broxel = txtBroxel.getText();
        String clave = txtClaveI.getText();
        String direccion = txtDirection.getText();
        String edoCivil = cboxCivilState.getSelectedItem().toString();
        String cedula = txtCedula.getText();
        String puesto = txtPosition.getText();
        String departamento = txtDepartment.getText();
        String credito = txtCreditI.getText();
        String banco = txtBank.getText();
        String bNombre = txtBeneficiaryName.getText();
        String bTelefono = txtBeneficiaryPhone.getText();
        String bParentesco = txtBeneficiaryRelation.getText();
        String lNacimiento = txtBornPlace.getText();
        String razones = txtReasons.getText();
        String comentarios = txtComentaries.getText();
        String sexo = (rbtnWoman.isSelected()) ? "Mujer" : "Hombre";
        String vacunado = (chkVaccinated.getState()) ? "VACUNADO" : "REGISTRADO";
        String estatus = (rbtnActive.isSelected()) ? "ACTIVO" : "INACTIVO";
        String recomendable = (String.valueOf(sliderRecommended.getValue()));
        String tipo = (rbtnRegister.isSelected()) ? "ALTA" : "REINGRESO";
        
        if(verifyFields())
        {
            String query = "INSERT INTO `employease`(`fecha_ingreso`, `nombre`, `apellido`, `unidad`, "
                + "`telefono`, `correo`, `nss`, `curp`, `rfc`, `broxel`, `banco`, `clave_interbancaria`, `direccion`, `fecha_nacimiento`, "
                + "`lugar_nacimiento`, `sexo`, `estado_civil`, `no_cedula`, `vacuna_covid`, `puesto`, `departamento`, `credito_infonavit`, "
                + "`nombre_beneficiario`, `telefono_beneficiario`, `parentesco_beneficiario`, `estatus`, `motivo_baja`, `recomendable`, "
                + "`motivo`, `tipo`, `fecha_alta_imss`, `fecha_inicio`, `fecha_baja`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            
            try 
            {
                st = connection.getConectarDB().prepareStatement(query);
                st.setDate(1, Date.valueOf(fActual));
                st.setString(2, nombre);
                st.setString(3, apellido);
                st.setString(4, unidad);
                st.setString(5, telefono);
                st.setString(6, email);
                st.setString(7, nss);
                st.setString(8, curp);
                st.setString(9, rfc);
                st.setString(10, broxel);
                st.setString(11, banco);
                if(clave.trim().equals(""))
                    st.setInt(12, 0);
                else
                    st.setInt(12, Integer.valueOf(clave));
                st.setString(13, direccion);
                st.setDate(14, Date.valueOf(fNacimiento));
                st.setString(15, lNacimiento);
                st.setString(16, sexo);
                st.setString(17, edoCivil);
                st.setString(18, cedula);
                st.setString(19, vacunado);
                st.setString(20, puesto);
                st.setString(21, departamento);
                st.setString(22, credito);
                st.setString(23, bNombre);
                st.setString(24, bTelefono);
                st.setString(25, bParentesco);
                st.setString(26, estatus);
                st.setString(27, razones);
                st.setString(28, recomendable);
                st.setString(29, comentarios);
                st.setString(30, tipo);
                st.setDate(31, Date.valueOf(fAltaIMSS));
                st.setDate(32, Date.valueOf(fInicio));
                st.setDate(33, Date.valueOf(fFin));

                if(st.executeUpdate() != 0)
                {
                    JOptionPane.showMessageDialog(rootPane, "Se añadió el empleado con éxito");
                    //Cerrar pestaña
                    FrameInfoEmpleado info = new FrameInfoEmpleado();
                    info.show();
                    this.dispose();
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Error al añadir el empleado");
                }
            } 
            catch (Exception e) 
            {
                System.out.println(e.toString());
            }
        }
    }
    
    private void loadData(){
        PreparedStatement st;
        ResultSet rs;
        String query = "SELECT MAX(id_empleado) FROM `employease`";
        
        try 
        {
            st = connection.getConectarDB().prepareStatement(query);
            rs = st.executeQuery();
            
            if(rs.next())
            {
                int id = rs.getInt(1);
                lblID.setText(String.valueOf(id + 1)); //Next ID
            }
            
            lblCurrentDate.setText(LocalDate.now().toString()); //Current date
        } 
        catch (Exception e) 
        {
            System.out.println(e.toString());
        }
        
        //NO MOVER
        //not null dates
        caldStart.setDate(Date.valueOf(LocalDate.of(0, Month.JANUARY, 1)));
        caldFinish.setDate(Date.valueOf(LocalDate.of(0, Month.JANUARY, 1)));
        calRegisterIMSS.setDate(Date.valueOf(LocalDate.of(0, Month.JANUARY, 1)));
    }
    
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAñadirEmpleado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.ButtonGroup btnGroupEstatus;
    private javax.swing.ButtonGroup btnGroupSexos;
    private javax.swing.ButtonGroup btnGroupTipo;
    private javax.swing.JMenuItem itemRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanelEmpleado;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private java.awt.Label label1;
    private javax.swing.JLabel lblCurrentDate;
    private javax.swing.JLabel lblID;
    // End of variables declaration//GEN-END:variables
}
